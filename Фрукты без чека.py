import sys
from PyQt6 import QtWidgets, QtGui, QtCore

class Product:
    def __init__(self, name: str, price: float, category: str, image_path: str = ""):
        self.name = name
        self.price = price
        self.category = category
        self.image_path = image_path

    def __repr__(self):
        return f"{self.name} ({self.price} —Ä—É–±)"

class ShoppingCart:
    def __init__(self):
        self.items = {}  # {product: quantity}

    def add_product(self, product: Product, quantity: int):
        if product in self.items:
            self.items[product] += quantity
        else:
            self.items[product] = quantity

    def remove_product(self, product: Product):
        if product in self.items:
            del self.items[product]

    def get_total_cost(self) -> float:
        total = sum(product.price * qty for product, qty in self.items.items())
        return round(total, 2)

    def clear(self):
        self.items.clear()

class MainWindow(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("üõí –ú–∞–≥–∞–∑–∏–Ω –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –º–∞—Å–æ–∫")
        self.resize(1000, 800)
        self.setStyleSheet("""
            QWidget {
                background-color: #6A5ACD;
                color: #FFFFFF;
                font-family: Arial;
            }
            QTabWidget::pane {
                border: 2px solid #FFFFFF;
                border-radius: 8px;
            }
            QTabBar::tab {
                background: #9370DB;
                padding: 8px;
                border-top-left-radius: 8px;
                border-top-right-radius: 8px;
            }
            QTabBar::tab:selected {
                background: #BA55D3;
            }
            QPushButton {
                background-color: #9370DB;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
            }
            QPushButton:hover {
                background-color: #BA55D3;
            }
            QLabel {
                font-size: 16px;
            }
            QTableWidget {
                background-color: #8A2BE2;
                color: #FFFFFF;
                gridline-color: #FFFFFF;
                font-size: 14px;
            }
            QLineEdit {
                background-color: #FFFFFF;
                color: #000000;
                border-radius: 4px;
                padding: 4px;
            }
        """)

        # –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ (–ø—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
        self.products = [
            Product("–Ø–±–ª–æ–∫–∏ 1–∫–≥", 90, "–§—Ä—É–∫—Ç—ã"),
            Product("–ë–∞–Ω–∞–Ω—ã 1–∫–≥", 120, "–§—Ä—É–∫—Ç—ã"),
            Product("–ü–æ–º–∏–¥–æ—Ä—ã 1–∫–≥", 80, "–û–≤–æ—â–∏"),
            Product("–û–≥—É—Ä—Ü—ã 1–∫–≥", 70, "–û–≤–æ—â–∏"),
            Product("–ú–æ–ª–æ–∫–æ 1–ª", 80, "–î—Ä—É–≥–æ–µ"),
            Product("–•–ª–µ–± –±–∞—Ç–æ–Ω", 50, "–î—Ä—É–≥–æ–µ"),
            Product("–ú–∞—Å–∫–∞ –ú–∏—Å—Ç–µ—Ä –ë–∏—Å—Ç", 100, "–ú–∞—Å–∫–∏"),
            Product("–ú–∞—Å–∫–∞ –°–ø–∞–π–¥–µ—Ä–º–µ–Ω", 150, "–ú–∞—Å–∫–∏"),
            Product("–ö–æ—Ç–∏–∫ —Å —É—Å–∞–º–∏", 50, "–°–º–µ—à–Ω–æ–µ"),
        ]

        self.cart = ShoppingCart()

        self.init_ui()

    def init_ui(self):
        main_layout = QtWidgets.QVBoxLayout(self)

        # –í–∫–ª–∞–¥–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        self.tabs = QtWidgets.QTabWidget()
        self.tabs.setTabPosition(QtWidgets.QTabWidget.TabPosition.North)
        self.tabs.setMovable(False)

        categories = ["–§—Ä—É–∫—Ç—ã", "–û–≤–æ—â–∏", "–ú–∞—Å–∫–∏", "–î—Ä—É–≥–æ–µ", "–°–º–µ—à–Ω–æ–µ"]
        self.category_tabs = {}

        for cat in categories:
            tab = QtWidgets.QWidget()
            self.setup_category_tab(tab, cat)
            self.tabs.addTab(tab, cat)
            self.category_tabs[cat] = tab

        main_layout.addWidget(self.tabs)

        # –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞
        self.cart_group = QtWidgets.QGroupBox("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞")
        self.cart_group.setStyleSheet("QGroupBox { font-weight: bold; font-size: 16px; }")
        self.cart_layout = QtWidgets.QVBoxLayout()

        self.cart_table = QtWidgets.QTableWidget()
        self.cart_table.setColumnCount(4)
        self.cart_table.setHorizontalHeaderLabels(["–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞", "–ö–æ–ª-–≤–æ", "–°—É–º–º–∞"])
        self.cart_table.verticalHeader().setVisible(False)
        self.cart_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.cart_table.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        self.cart_table.setFixedHeight(350)
        self.cart_table.resizeColumnsToContents()
        self.cart_layout.addWidget(self.cart_table)

        # –ò—Ç–æ–≥ –∏ –∫–Ω–æ–ø–∫–∏
        bottom_hlayout = QtWidgets.QHBoxLayout()
        self.total_label = QtWidgets.QLabel("–ò—Ç–æ–≥–æ: 0.00 —Ä—É–±")
        self.total_label.setStyleSheet("font-weight: bold; font-size: 18px;")
        bottom_hlayout.addWidget(self.total_label)

        self.clear_btn = QtWidgets.QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É")
        self.clear_btn.clicked.connect(self.clear_cart)

        self.order_btn = QtWidgets.QPushButton("‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")
        self.order_btn.clicked.connect(self.checkout)

        bottom_hlayout.addWidget(self.clear_btn)
        bottom_hlayout.addWidget(self.order_btn)

        # –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        self.payment_method_box = QtWidgets.QGroupBox("–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã")
        self.payment_method_box.setStyleSheet("QGroupBox { font-size: 14px; }")
        payment_layout = QtWidgets.QHBoxLayout()

        self.cash_radio = QtWidgets.QRadioButton("–ù–∞–ª–∏—á–Ω—ã–º–∏")
        self.cash_radio.setChecked(True)
        self.card_radio = QtWidgets.QRadioButton("–ö–∞—Ä—Ç–æ–π")
        self.card_radio.toggled.connect(self.toggle_payment_fields)

        payment_layout.addWidget(self.cash_radio)
        payment_layout.addWidget(self.card_radio)

        # –ü–æ–ª–µ –¥–ª—è –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã
        self.card_number_input = QtWidgets.QLineEdit()
        self.card_number_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã")
        self.card_number_input.setEnabled(False)
        payment_layout.addWidget(self.card_number_input)

        self.payment_method_box.setLayout(payment_layout)

        self.cart_layout.addWidget(self.payment_method_box)
        self.cart_layout.addLayout(bottom_hlayout)

        self.cart_group.setLayout(self.cart_layout)
        main_layout.addWidget(self.cart_group)

        self.update_cart_display()

    def setup_category_tab(self, tab, category):
        layout = QtWidgets.QVBoxLayout()
        # –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤
        table = QtWidgets.QTableWidget()
        table.setColumnCount(2)
        table.setHorizontalHeaderLabels(["–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞"])
        table.verticalHeader().setVisible(False)
        table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        table.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        filtered = [p for p in self.products if p.category == category]
        table.setRowCount(0)
        for product in filtered:
            row = table.rowCount()
            table.insertRow(row)
            table.setItem(row, 0, QtWidgets.QTableWidgetItem(product.name))
            table.setItem(row, 1, QtWidgets.QTableWidgetItem(f"{product.price} —Ä—É–±"))
        table.resizeColumnsToContents()
        table.setFixedHeight(200)
        layout.addWidget(table)

        # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        btn = QtWidgets.QPushButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É")
        btn.clicked.connect(lambda: self.add_product_from_table(table))
        layout.addWidget(btn, alignment=QtCore.Qt.AlignmentFlag.AlignRight)

        # –ü–µ—Ä–µ–¥–∞—á–∞ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        tab.layout = layout
        tab.table = table

        tab.setLayout(layout)

    def add_product_from_table(self, table):
        selected_rows = table.selectionModel().selectedRows()
        if not selected_rows:
            QtWidgets.QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä.")
            return
        row = selected_rows[0].row()
        name = table.item(row, 0).text()
        price = float(table.item(row, 1).text().replace(" —Ä—É–±", ""))
        product = next(p for p in self.products if p.name == name and p.price == price)
        qty, ok = QtWidgets.QInputDialog.getInt(self, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", f"–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {name}:", min=1, max=100)
        if ok:
            self.cart.add_product(product, qty)
            self.update_cart_display()

    def buy_special_mask(self, mask_name):
        product = next(p for p in self.products if p.name == mask_name)
        self.cart.add_product(product, 1)
        self.update_cart_display()

    def update_cart_display(self):
        self.cart_table.setRowCount(0)
        for product, qty in self.cart.items.items():
            total = product.price * qty
            row = self.cart_table.rowCount()
            self.cart_table.insertRow(row)
            self.cart_table.setItem(row, 0, QtWidgets.QTableWidgetItem(product.name))
            self.cart_table.setItem(row, 1, QtWidgets.QTableWidgetItem(f"{product.price} —Ä—É–±"))
            self.cart_table.setItem(row, 2, QtWidgets.QTableWidgetItem(str(qty)))
            self.cart_table.setItem(row, 3, QtWidgets.QTableWidgetItem(f"{total:.2f} —Ä—É–±"))
        total_cost = self.cart.get_total_cost()
        self.total_label.setText(f"–ò—Ç–æ–≥–æ: {total_cost:.2f} —Ä—É–±")

    def clear_cart(self):
        reply = QtWidgets.QMessageBox.question(self, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É?", QtWidgets.QMessageBox.StandardButton.Yes | QtWidgets.QMessageBox.StandardButton.No)
        if reply == QtWidgets.QMessageBox.StandardButton.Yes:
            self.cart.clear()
            self.update_cart_display()

    def checkout(self):
        if not self.cart.items:
            QtWidgets.QMessageBox.information(self, "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", "–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º.")
            return
        total = self.cart.get_total_cost()
        payment_method = "–ù–∞–ª–∏—á–Ω—ã–º–∏" if self.cash_radio.isChecked() else "–ö–∞—Ä—Ç–æ–π"
        if payment_method == "–ö–∞—Ä—Ç–æ–π":
            card_number = self.card_number_input.text()
            if not card_number:
                QtWidgets.QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã.")
                return
        reply = QtWidgets.QMessageBox.question(self, "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞", f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ {total:.2f} —Ä—É–± —á–µ—Ä–µ–∑ {payment_method}?", QtWidgets.QMessageBox.StandardButton.Yes | QtWidgets.QMessageBox.StandardButton.No)
        if reply == QtWidgets.QMessageBox.StandardButton.Yes:
            self.show_receipt()
            self.cart.clear()
            self.update_cart_display()

    def toggle_payment_fields(self):
        self.card_number_input.setEnabled(self.card_radio.isChecked())

    def show_receipt(self):
        total = self.cart.get_total_cost()
        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ —Å —á–µ–∫–æ–º –∏ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞
        receipt_window = QtWidgets.QWidget()
        receipt_window.setWindowTitle("üßæ –í–∞—à —á–µ–∫")
        receipt_window.resize(600, 400)
        receipt_window.setStyleSheet("background-color: #F5F5DC; font-family: Arial;")
        layout = QtWidgets.QVBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QtWidgets.QLabel("üßæ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!")
        title.setStyleSheet("font-size: 24px; font-weight: bold; color: #8B0000;")
        title.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(title)

        # –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if self.cart.items:
            # –±–µ—Ä–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
            first_product = next(iter(self.cart.items))
            img_path = first_product.image_path
            if img_path:
                pixmap = QtGui.QPixmap(img_path).scaled(150, 150, QtCore.Qt.AspectRatioMode.KeepAspectRatio)
                img_label = QtWidgets.QLabel()
                img_label.setPixmap(pixmap)
                img_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                layout.addWidget(img_label)

        # –¢–∞–±–ª–∏—Ü–∞ —Å –∫—É–ø–ª–µ–Ω–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
        table = QtWidgets.QTableWidget()
        table.setColumnCount(3)
        table.setHorizontalHeaderLabels(["–¢–æ–≤–∞—Ä", "–ö–æ–ª-–≤–æ", "–¶–µ–Ω–∞"])
        table.verticalHeader().setVisible(False)
        for product, qty in self.cart.items.items():
            row = table.rowCount()
            table.insertRow(row)
            table.setItem(row, 0, QtWidgets.QTableWidgetItem(product.name))
            table.setItem(row, 1, QtWidgets.QTableWidgetItem(str(qty)))
            table.setItem(row, 2, QtWidgets.QTableWidgetItem(f"{product.price} —Ä—É–±"))
        table.resizeColumnsToContents()
        layout.addWidget(table)

        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞
        total_label = QtWidgets.QLabel(f"–û–±—â–∞—è —Å—É–º–º–∞: {total:.2f} —Ä—É–±")
        total_label.setStyleSheet("font-size: 20px; font-weight: bold; color: #006400;")
        total_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(total_label)

        # QR-–∫–æ–¥ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ–∫–∞)
        # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –¥–æ–±–∞–≤–∏–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        check_image_path = ""  # –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é —á–µ–∫–∞
        # –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å
        # –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ñ–∞–π–ª "check.png"
        # check_image_path = "check.png"
        # if check_image_path:
        #     pixmap_check = QtGui.QPixmap(check_image_path).scaled(200, 100, QtCore.Qt.AspectRatioMode.KeepAspectRatio)
        #     check_label = QtWidgets.QLabel()
        #     check_label.setPixmap(pixmap_check)
        #     check_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        #     layout.addWidget(check_label)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        close_btn = QtWidgets.QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
        close_btn.clicked.connect(receipt_window.close)
        layout.addWidget(close_btn, alignment=QtCore.Qt.AlignmentFlag.AlignCenter)

        receipt_window.setLayout(layout)
        receipt_window.show()

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec())